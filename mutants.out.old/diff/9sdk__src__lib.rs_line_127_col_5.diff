--- 9sdk/src/lib.rs
+++ replace hash_password -> Result<String, KeyManagerError> with Ok(String::new())
@@ -119,24 +119,17 @@
     pub fn set_config(&self, config: EncryptedKeyConfig) {
         let mut guard = self.config.lock().unwrap();
         *guard = Some(config);
     }
 }
 
 /// Hashes a password using Argon2
 fn hash_password(password: &str) -> Result<String, KeyManagerError> {
-    let mut rng = thread_rng();
-    let salt = SaltString::generate(&mut rng);
-    let argon2 = Argon2::default();
-
-    Ok(argon2
-        .hash_password(password.as_bytes(), &salt)
-        .map_err(|e| KeyManagerError::KeyGenerationError(e.to_string()))?
-        .to_string())
+    Ok(String::new()) /* ~ changed by cargo-mutants ~ */
 }
 
 /// Verifies a password against a stored hash
 fn verify_password(password: &str, stored_hash: &str) -> bool {
     let parsed_hash = match PasswordHash::new(stored_hash) {
         Ok(hash) => hash,
         Err(_) => return false,
     };
