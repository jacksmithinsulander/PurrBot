--- 9sdk/src/transport.rs
+++ replace listen -> io::Result<Pin<Box<dyn TransportStream>>> with Ok(Pin::from_iter([Box::new(Default::default())]))
@@ -31,29 +31,17 @@
         Transport::Vsock(cid, port) => {
             let stream = VsockStream::connect(cid, port).await?;
             Ok(Box::pin(stream))
         }
     }
 }
 
 pub async fn listen(transport: Transport) -> io::Result<Pin<Box<dyn TransportStream>>> {
-    match transport {
-        Transport::Tcp(addr) => {
-            let listener = TcpListener::bind(addr).await?;
-            let (stream, _) = listener.accept().await?;
-            Ok(Box::pin(stream))
-        }
-        #[cfg(feature = "vsock")]
-        Transport::Vsock(cid, port) => {
-            let listener = VsockListener::bind(cid, port)?;
-            let (stream, _) = listener.accept().await?;
-            Ok(Box::pin(stream))
-        }
-    }
+    Ok(Pin::from_iter([Box::new(Default::default())])) /* ~ changed by cargo-mutants ~ */
 }
 
 #[cfg(test)]
 mod tests {
     use super::*;
 
     #[tokio::test]
     async fn test_tcp_connect() {
