
*** meow/src/v1/services/user_config_store.rs:62:9: replace UserConfigStore::get_config -> Result<String, UserConfigStoreError> with Ok("xyzzy".into())

*** mutation diff:
--- meow/src/v1/services/user_config_store.rs
+++ replace UserConfigStore::get_config -> Result<String, UserConfigStoreError> with Ok("xyzzy".into())
@@ -54,18 +54,17 @@
     ) -> Result<(), UserConfigStoreError> {
         let connection = self.connection.lock().await;
         execute_insert_or_update(&*connection, user_id, config_json)?;
         Ok(())
     }
 
     /// Retrieves a user's configuration
     pub async fn get_config(&self, user_id: &str) -> Result<String, UserConfigStoreError> {
-        let connection = self.connection.lock().await;
-        query_user_config(&*connection, user_id)
+        Ok("xyzzy".into()) /* ~ changed by cargo-mutants ~ */
     }
     
     /// Checks if a user configuration exists
     pub async fn config_exists(&self, user_id: &str) -> Result<bool, UserConfigStoreError> {
         match self.get_config(user_id).await {
             Ok(_) => Ok(true),
             Err(UserConfigStoreError::NotFound) => Ok(false),
             Err(e) => Err(e),


*** /usr/local/rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo test --no-run --verbose --package=meow@0.1.0
       Fresh unicode-ident v1.0.18
       Fresh proc-macro2 v1.0.95
       Fresh quote v1.0.40
       Fresh syn v2.0.101
       Fresh cfg-if v1.0.0
       Fresh autocfg v1.4.0
       Fresh shlex v1.3.0
       Fresh version_check v0.9.5
       Fresh smallvec v1.15.1
       Fresh synstructure v0.13.2
       Fresh memchr v2.7.4
       Fresh pin-project-lite v0.2.16
       Fresh libc v0.2.172
       Fresh cc v1.2.26
       Fresh zerofrom-derive v0.1.6
       Fresh futures-core v0.3.31
       Fresh scopeguard v1.2.0
       Fresh yoke-derive v0.8.0
       Fresh bytes v1.10.1
       Fresh pkg-config v0.3.32
       Fresh zerofrom v0.1.6
       Fresh stable_deref_trait v1.2.0
       Fresh vcpkg v0.2.15
       Fresh getrandom v0.2.16
       Fresh fnv v1.0.7
       Fresh yoke v0.8.0
       Fresh once_cell v1.21.3
       Fresh rand_core v0.6.4
       Fresh lock_api v0.4.13
       Fresh zerovec-derive v0.11.1
       Fresh parking_lot_core v0.9.11
       Fresh typenum v1.18.0
       Fresh futures-sink v0.3.31
       Fresh zerovec v0.11.2
       Fresh mio v1.0.4
       Fresh signal-hook-registry v1.4.5
       Fresh socket2 v0.5.10
       Fresh tokio-macros v2.5.0
       Fresh generic-array v0.14.7
       Fresh parking_lot v0.12.4
       Fresh displaydoc v0.2.5
       Fresh itoa v1.0.15
       Fresh slab v0.4.9
       Fresh futures-channel v0.3.31
       Fresh futures-macro v0.3.31
       Fresh futures-task v0.3.31
       Fresh futures-io v0.3.31
       Fresh tokio v1.45.1
       Fresh pin-utils v0.1.0
       Fresh bitflags v2.9.1
       Fresh tinystr v0.8.1
       Fresh crypto-common v0.1.6
       Fresh writeable v0.6.1
       Fresh futures-util v0.3.31
       Fresh litemap v0.8.0
       Fresh zerotrie v0.2.2
       Fresh http v1.3.1
       Fresh potential_utf v0.1.2
       Fresh serde_derive v1.0.219
       Fresh icu_locale_core v2.0.0
       Fresh serde v1.0.219
       Fresh http-body v1.0.1
       Fresh icu_collections v2.0.0
       Fresh zerocopy v0.8.25
       Fresh foreign-types-shared v0.1.1
       Fresh subtle v2.6.1
       Fresh icu_provider v2.0.0
       Fresh percent-encoding v2.3.1
       Fresh zeroize v1.8.1
       Fresh log v0.4.27
       Fresh foreign-types v0.3.2
       Fresh icu_normalizer_data v2.0.0
       Fresh icu_properties_data v2.0.1
       Fresh openssl-sys v0.9.109
       Fresh openssl-macros v0.1.1
       Fresh strsim v0.11.1
       Fresh tower-service v0.3.3
       Fresh ident_case v1.0.1
       Fresh try-lock v0.2.5
       Fresh icu_normalizer v2.0.0
       Fresh icu_properties v2.0.1
       Fresh openssl v0.10.73
       Fresh httparse v1.10.1
       Fresh tracing-core v0.1.34
       Fresh openssl-probe v0.1.6
       Fresh darling_core v0.20.11
       Fresh want v0.3.1
       Fresh unicase v2.8.1
       Fresh ryu v1.0.20
       Fresh tracing v0.1.41
       Fresh native-tls v0.2.14
       Fresh idna_adapter v1.2.1
       Fresh hyper v1.6.0
       Fresh darling_macro v0.20.11
       Fresh form_urlencoded v1.2.1
       Fresh sync_wrapper v1.0.2
       Fresh ipnet v2.11.0
       Fresh base64 v0.22.1
       Fresh utf8_iter v1.0.4
       Fresh cpufeatures v0.2.17
       Fresh tower-layer v0.3.3
       Fresh darling v0.20.11
       Fresh hyper-util v0.1.14
       Fresh idna v1.0.3
       Fresh tower v0.5.2
       Fresh serde_json v1.0.140
       Fresh getrandom v0.3.3
       Fresh tokio-native-tls v0.3.1
       Fresh http-body-util v0.1.3
       Fresh futures-executor v0.3.31
       Fresh inout v0.1.4
       Fresh block-buffer v0.10.4
       Fresh aho-corasick v1.1.3
       Fresh thiserror-impl v2.0.12
       Fresh regex-syntax v0.8.5
       Fresh unicode-xid v0.2.6
       Fresh iri-string v0.7.8
       Fresh mime v0.3.17
       Fresh hyper-tls v0.6.0
       Fresh futures v0.3.31
       Fresh num-traits v0.2.19
       Fresh psm v0.1.26
       Fresh derive_more-impl v1.0.0
       Fresh regex-automata v0.4.9
       Fresh mime_guess v2.0.5
       Fresh tower-http v0.6.6
       Fresh thiserror v2.0.12
       Fresh cipher v0.4.4
       Fresh digest v0.10.7
       Fresh url v2.5.4
       Fresh erasable v1.3.0
       Fresh ahash v0.8.12
       Fresh serde_with_macros v3.12.0
       Fresh serde_urlencoded v0.7.1
       Fresh rustls-pki-types v1.12.0
       Fresh universal-hash v0.5.1
       Fresh ppv-lite86 v0.2.21
       Fresh tokio-util v0.7.15
       Fresh pin-project-internal v1.1.10
       Fresh include_dir_macros v0.7.4
       Fresh proc-macro-error-attr2 v2.0.0
       Fresh opaque-debug v0.3.1
       Fresh base64ct v1.8.0
       Fresh bytemuck v1.23.1
       Fresh rc-box v1.3.0
       Fresh serde_with v3.12.0
       Fresh itertools v0.10.5
       Fresh include_dir v0.7.4
       Fresh password-hash v0.5.0
       Fresh poly1305 v0.8.0
       Fresh proc-macro-error2 v2.0.1
       Fresh rgb v0.8.50
       Fresh pin-project v1.1.10
       Fresh rand_chacha v0.3.1
       Fresh hashbrown v0.14.5
       Fresh reqwest v0.12.19
       Fresh stacker v0.1.21
       Fresh regex v1.11.1
       Fresh derive_more v1.0.0
       Fresh chacha20 v0.9.1
       Fresh blake2 v0.10.6
       Fresh chrono v0.4.41
       Fresh uuid v1.17.0
       Fresh aead v0.5.2
       Fresh is-terminal v0.4.16
       Fresh either v1.15.0
       Fresh takecell v0.1.1
       Fresh termcolor v1.4.1
       Fresh heck v0.5.0
       Fresh take_mut v0.2.2
       Fresh humantime v2.2.0
       Fresh teloxide-core v0.11.2
       Fresh chacha20poly1305 v0.10.1
       Fresh teloxide-macros v0.9.0
       Fresh env_logger v0.10.2
       Fresh hashlink v0.9.1
       Fresh argon2 v0.5.3
       Fresh libsqlite3-sys v0.28.0
       Fresh rand v0.8.5
       Fresh aquamarine v0.6.0
       Fresh dptree v0.3.0
       Fresh tokio-stream v0.1.17
       Fresh fallible-iterator v0.3.0
       Fresh fallible-streaming-iterator v0.1.9
       Fresh linux-raw-sys v0.9.4
       Fresh hex v0.4.3
       Fresh pretty_env_logger v0.5.0
       Fresh fastrand v2.3.0
       Fresh nine_sdk v0.1.0 (/tmp/cargo-mutants-workspace-191TZv.tmp/9sdk)
warning: unused import: `AeadCore`
 --> 9sdk/src/lib.rs:7:18
  |
7 |     aead::{Aead, AeadCore},
  |                  ^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `CryptoRng` and `Rng`
 --> 9sdk/src/lib.rs:9:12
  |
9 | use rand::{CryptoRng, Rng, RngCore, thread_rng};
  |            ^^^^^^^^^  ^^^

warning: function `encrypt_chacha20` is never used
   --> 9sdk/src/lib.rs:160:4
    |
160 | fn encrypt_chacha20(
    |    ^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: function `decrypt_chacha20` is never used
   --> 9sdk/src/lib.rs:175:4
    |
175 | fn decrypt_chacha20(
    |    ^^^^^^^^^^^^^^^^

       Fresh teloxide v0.15.0
       Fresh rusqlite v0.31.0
       Fresh rustix v1.0.7
warning: `nine_sdk` (lib) generated 4 warnings (run `cargo fix --lib -p nine_sdk` to apply 2 suggestions)
       Fresh tempfile v3.20.0
       Dirty meow v0.1.0 (/tmp/cargo-mutants-workspace-191TZv.tmp/meow): the file `meow/src/v1/services/user_config_store.rs` has changed (1749670621.042952700s, 2s after last build at 1749670619.133948746s)
   Compiling meow v0.1.0 (/tmp/cargo-mutants-workspace-191TZv.tmp/meow)
warning: unused import: `Write`
 --> meow/tests/roundtrip.rs:2:21
  |
2 | use std::io::{Read, Write};
  |                     ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `Read`
 --> meow/tests/roundtrip.rs:2:15
  |
2 | use std::io::{Read, Write};
  |               ^^^^

warning: `meow` (test "roundtrip") generated 2 warnings
     Running `/usr/local/rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rustc --crate-name meow --edition=2021 meow/src/main.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 --test --cfg 'feature="default"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "vsock"))' -C metadata=38009e686cf190d0 -C extra-filename=-9c48ee44fefabeb0 --out-dir /tmp/cargo-mutants-workspace-191TZv.tmp/target/debug/deps -C incremental=/tmp/cargo-mutants-workspace-191TZv.tmp/target/debug/incremental -L dependency=/tmp/cargo-mutants-workspace-191TZv.tmp/target/debug/deps --extern hex=/tmp/cargo-mutants-workspace-191TZv.tmp/target/debug/deps/libhex-20cdb627b9823e3e.rlib --extern log=/tmp/cargo-mutants-workspace-191TZv.tmp/target/debug/deps/liblog-e4c872c580f67c43.rlib --extern nine_sdk=/tmp/cargo-mutants-workspace-191TZv.tmp/target/debug/deps/libnine_sdk-13130c9941aa6ee8.rlib --extern once_cell=/tmp/cargo-mutants-workspace-191TZv.tmp/target/debug/deps/libonce_cell-6c5ecd365f058077.rlib --extern pretty_env_logger=/tmp/cargo-mutants-workspace-191TZv.tmp/target/debug/deps/libpretty_env_logger-fd0c85adc5970ed9.rlib --extern rusqlite=/tmp/cargo-mutants-workspace-191TZv.tmp/target/debug/deps/librusqlite-405dd0f26bcbaab7.rlib --extern serde=/tmp/cargo-mutants-workspace-191TZv.tmp/target/debug/deps/libserde-4a228d781a67e5ef.rlib --extern serde_json=/tmp/cargo-mutants-workspace-191TZv.tmp/target/debug/deps/libserde_json-38200e1bfcf588bf.rlib --extern teloxide=/tmp/cargo-mutants-workspace-191TZv.tmp/target/debug/deps/libteloxide-803c910ebb7daec0.rlib --extern tempfile=/tmp/cargo-mutants-workspace-191TZv.tmp/target/debug/deps/libtempfile-e39ad06f1c575a9d.rlib --extern thiserror=/tmp/cargo-mutants-workspace-191TZv.tmp/target/debug/deps/libthiserror-623b5bd96f2878a9.rlib --extern tokio=/tmp/cargo-mutants-workspace-191TZv.tmp/target/debug/deps/libtokio-87ff163b8d900c11.rlib --extern uuid=/tmp/cargo-mutants-workspace-191TZv.tmp/target/debug/deps/libuuid-0f427ad42de7d560.rlib -L native=/tmp/cargo-mutants-workspace-191TZv.tmp/target/debug/build/libsqlite3-sys-6dbd936600260ecd/out -L native=/tmp/cargo-mutants-workspace-191TZv.tmp/target/debug/build/psm-3315b25b83038a6a/out`
     Running `/usr/local/rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rustc --crate-name meow --edition=2021 meow/src/main.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 --cfg 'feature="default"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "vsock"))' -C metadata=91eb294dbbe64569 -C extra-filename=-f624b31761a7a8de --out-dir /tmp/cargo-mutants-workspace-191TZv.tmp/target/debug/deps -C incremental=/tmp/cargo-mutants-workspace-191TZv.tmp/target/debug/incremental -L dependency=/tmp/cargo-mutants-workspace-191TZv.tmp/target/debug/deps --extern hex=/tmp/cargo-mutants-workspace-191TZv.tmp/target/debug/deps/libhex-20cdb627b9823e3e.rlib --extern log=/tmp/cargo-mutants-workspace-191TZv.tmp/target/debug/deps/liblog-e4c872c580f67c43.rlib --extern nine_sdk=/tmp/cargo-mutants-workspace-191TZv.tmp/target/debug/deps/libnine_sdk-13130c9941aa6ee8.rlib --extern once_cell=/tmp/cargo-mutants-workspace-191TZv.tmp/target/debug/deps/libonce_cell-6c5ecd365f058077.rlib --extern pretty_env_logger=/tmp/cargo-mutants-workspace-191TZv.tmp/target/debug/deps/libpretty_env_logger-fd0c85adc5970ed9.rlib --extern rusqlite=/tmp/cargo-mutants-workspace-191TZv.tmp/target/debug/deps/librusqlite-405dd0f26bcbaab7.rlib --extern serde=/tmp/cargo-mutants-workspace-191TZv.tmp/target/debug/deps/libserde-4a228d781a67e5ef.rlib --extern serde_json=/tmp/cargo-mutants-workspace-191TZv.tmp/target/debug/deps/libserde_json-38200e1bfcf588bf.rlib --extern teloxide=/tmp/cargo-mutants-workspace-191TZv.tmp/target/debug/deps/libteloxide-803c910ebb7daec0.rlib --extern thiserror=/tmp/cargo-mutants-workspace-191TZv.tmp/target/debug/deps/libthiserror-623b5bd96f2878a9.rlib --extern tokio=/tmp/cargo-mutants-workspace-191TZv.tmp/target/debug/deps/libtokio-87ff163b8d900c11.rlib --extern uuid=/tmp/cargo-mutants-workspace-191TZv.tmp/target/debug/deps/libuuid-0f427ad42de7d560.rlib -L native=/tmp/cargo-mutants-workspace-191TZv.tmp/target/debug/build/libsqlite3-sys-6dbd936600260ecd/out -L native=/tmp/cargo-mutants-workspace-191TZv.tmp/target/debug/build/psm-3315b25b83038a6a/out`
warning: unused import: `CommandLoggedOut`
 --> meow/src/v1/models/buttons.rs:2:44
  |
2 | use crate::v1::commands::{CommandLoggedIn, CommandLoggedOut};
  |                                            ^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `PASSWORD_HANDLERS`
 --> meow/src/v1/models/buttons.rs:4:25
  |
4 | use crate::v1::models::{PASSWORD_HANDLERS, log_in_state, password_handler::PasswordHandler};
  |                         ^^^^^^^^^^^^^^^^^

warning: unused import: `std::error::Error`
 --> meow/src/v1/models/buttons.rs:7:5
  |
7 | use std::error::Error;
  |     ^^^^^^^^^^^^^^^^^

warning: unused import: `hex`
 --> meow/src/v1/models/password_handler.rs:2:5
  |
2 | use hex;
  |     ^^^

warning: unused import: `CHAT_MESSAGE_IDS`
 --> meow/src/v1/processors/callback_processor.rs:3:48
  |
3 | use crate::v1::processors::message_processor::{CHAT_MESSAGE_IDS, delete_all_messages};
  |                                                ^^^^^^^^^^^^^^^^

warning: unused imports: `BotCommandScope` and `Message`
 --> meow/src/v1/processors/callback_processor.rs:8:23
  |
8 | use teloxide::types::{BotCommandScope, MaybeInaccessibleMessage, Message};
  |                       ^^^^^^^^^^^^^^^                            ^^^^^^^

warning: unused import: `Result as SqlResult`
 --> meow/src/v1/services/user_config_store.rs:1:47
  |
1 | use rusqlite::{Connection, OptionalExtension, Result as SqlResult, params};
  |                                               ^^^^^^^^^^^^^^^^^^^

warning: unused import: `connect`
 --> meow/src/main.rs:8:27
  |
8 | use nine_sdk::{Transport, connect};
  |                           ^^^^^^^

warning: unused import: `CommandLoggedIn`
 --> meow/src/main.rs:9:20
  |
9 | use v1::commands::{CommandLoggedIn, CommandLoggedOut};
  |                    ^^^^^^^^^^^^^^^

warning: unused import: `message_handler`
  --> meow/src/main.rs:10:38
   |
10 | use v1::handlers::{callback_handler, message_handler};
   |                                      ^^^^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
  --> meow/src/v1/handlers/message.rs:20:9
   |
20 |     use std::collections::HashMap;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `ChatId`, `ChatKind`, `Chat`, `MessageId`, `MessageKind`, `UserId`, and `User`
  --> meow/src/v1/handlers/message.rs:21:27
   |
21 |     use teloxide::types::{Chat, ChatId, ChatKind, MessageId, MessageKind, User, UserId};
   |                           ^^^^  ^^^^^^  ^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^^^  ^^^^  ^^^^^^

warning: unused import: `CommandLoggedOut`
 --> meow/src/v1/models/buttons.rs:2:44
  |
2 | use crate::v1::commands::{CommandLoggedIn, CommandLoggedOut};
  |                                            ^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
  --> meow/src/v1/models/password_handler.rs:42:13
   |
42 |         let mut key_manager = self.key_manager.lock().await;
   |             ----^^^^^^^^^^^
   |             |
   |             help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
  --> meow/src/v1/models/password_handler.rs:61:13
   |
61 |         let mut key_manager = self.key_manager.lock().await;
   |             ----^^^^^^^^^^^
   |             |
   |             help: remove this `mut`

warning: unused variable: `key_manager`
  --> meow/src/v1/models/password_handler.rs:80:13
   |
80 |         let key_manager = self.key_manager.lock().await;
   |             ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_key_manager`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `key_manager`
  --> meow/src/v1/models/password_handler.rs:89:13
   |
89 |         let key_manager = self.key_manager.lock().await;
   |             ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_key_manager`

warning: unused variable: `user_id`
  --> meow/src/v1/services/user_config_store.rs:61:36
   |
61 |     pub async fn get_config(&self, user_id: &str) -> Result<String, UserConfigStoreError> {
   |                                    ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_user_id`

warning: unused variable: `transport`
  --> meow/src/main.rs:57:9
   |
57 |     let transport = determine_transport();
   |         ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_transport`

warning: function `log_callback_result` is never used
  --> meow/src/v1/handlers/callback.rs:39:4
   |
39 | fn log_callback_result<T, E: std::fmt::Display>(result: &Result<T, E>) {
   |    ^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: variant `InvalidState` is never constructed
  --> meow/src/v1/models/password_handler.rs:14:5
   |
10 | pub enum PasswordError {
   |          ------------- variant in this enum
...
14 |     InvalidState,
   |     ^^^^^^^^^^^^
   |
   = note: `PasswordError` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: constant `TABLE_NAME` is never used
 --> meow/src/v1/services/user_config_store.rs:8:7
  |
8 | const TABLE_NAME: &str = "user_configs";
  |       ^^^^^^^^^^

warning: constant `SELECT_CONFIG_SQL` is never used
  --> meow/src/v1/services/user_config_store.rs:15:7
   |
15 | const SELECT_CONFIG_SQL: &str = "SELECT config_json FROM user_configs WHERE user_id = ?1";
   |       ^^^^^^^^^^^^^^^^^

warning: variant `NotFound` is never constructed
  --> meow/src/v1/services/user_config_store.rs:24:5
   |
18 | pub enum UserConfigStoreError {
   |          -------------------- variant in this enum
...
24 |     NotFound,
   |     ^^^^^^^^
   |
   = note: `UserConfigStoreError` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: method `config_exists` is never used
  --> meow/src/v1/services/user_config_store.rs:66:18
   |
38 | impl UserConfigStore {
   | -------------------- method in this implementation
...
66 |     pub async fn config_exists(&self, user_id: &str) -> Result<bool, UserConfigStoreError> {
   |                  ^^^^^^^^^^^^^

warning: function `query_user_config` is never used
  --> meow/src/v1/services/user_config_store.rs:95:4
   |
95 | fn query_user_config(
   |    ^^^^^^^^^^^^^^^^^

warning: unreachable pattern
   --> meow/src/main.rs:143:13
    |
140 |             Transport::Tcp(addr) => {
    |             -------------------- matches all the relevant values
...
143 |             _ => panic!("Expected TCP transport"),
    |             ^ no value can reach this
    |
    = note: `#[warn(unreachable_patterns)]` on by default

warning: unreachable pattern
   --> meow/src/main.rs:160:13
    |
157 |             Transport::Tcp(addr) => {
    |             -------------------- matches all the relevant values
...
160 |             _ => panic!("Expected TCP transport"),
    |             ^ no value can reach this

warning: unreachable pattern
   --> meow/src/main.rs:171:13
    |
168 |             Transport::Tcp(addr) => {
    |             -------------------- matches all the relevant values
...
171 |             _ => panic!("Expected TCP transport"),
    |             ^ no value can reach this

warning: unreachable pattern
   --> meow/src/main.rs:187:13
    |
184 |             Transport::Tcp(addr) => {
    |             -------------------- matches all the relevant values
...
187 |             _ => panic!("Expected TCP transport"),
    |             ^ no value can reach this

warning: unreachable pattern
   --> meow/src/main.rs:197:13
    |
194 |             Transport::Tcp(addr) => {
    |             -------------------- matches all the relevant values
...
197 |             _ => panic!("Expected TCP transport"),
    |             ^ no value can reach this

warning: struct `MockBot` is never constructed
  --> meow/src/v1/handlers/message.rs:47:12
   |
47 |     struct MockBot;
   |            ^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: struct `MockMessage` is never constructed
  --> meow/src/v1/handlers/message.rs:48:12
   |
48 |     struct MockMessage;
   |            ^^^^^^^^^^^

warning: struct `MockUserConfigStore` is never constructed
  --> meow/src/v1/handlers/message.rs:49:12
   |
49 |     struct MockUserConfigStore;
   |            ^^^^^^^^^^^^^^^^^^^

warning: `meow` (bin "meow" test) generated 27 warnings (16 duplicates) (run `cargo fix --bin "meow" --tests` to apply 3 suggestions)
warning: `meow` (bin "meow") generated 23 warnings (run `cargo fix --bin "meow"` to apply 12 suggestions)
    Finished `test` profile [unoptimized + debuginfo] target(s) in 1.19s
  Executable `/tmp/cargo-mutants-workspace-191TZv.tmp/target/debug/deps/meow-9c48ee44fefabeb0`
  Executable `/tmp/cargo-mutants-workspace-191TZv.tmp/target/debug/deps/integration_tests-aafddfd38aab1803`
  Executable `/tmp/cargo-mutants-workspace-191TZv.tmp/target/debug/deps/roundtrip-73225d3085b7c2be`

*** result: Success

*** /usr/local/rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo test --verbose --package=meow@0.1.0
       Fresh unicode-ident v1.0.18
       Fresh proc-macro2 v1.0.95
       Fresh quote v1.0.40
       Fresh syn v2.0.101
       Fresh libc v0.2.172
       Fresh cfg-if v1.0.0
       Fresh autocfg v1.4.0
       Fresh shlex v1.3.0
       Fresh cc v1.2.26
       Fresh version_check v0.9.5
       Fresh smallvec v1.15.1
       Fresh synstructure v0.13.2
       Fresh memchr v2.7.4
       Fresh pin-project-lite v0.2.16
       Fresh futures-core v0.3.31
       Fresh scopeguard v1.2.0
       Fresh bytes v1.10.1
       Fresh zerofrom-derive v0.1.6
       Fresh yoke-derive v0.8.0
       Fresh vcpkg v0.2.15
       Fresh pkg-config v0.3.32
       Fresh stable_deref_trait v1.2.0
       Fresh zerofrom v0.1.6
       Fresh getrandom v0.2.16
       Fresh once_cell v1.21.3
       Fresh fnv v1.0.7
       Fresh lock_api v0.4.13
       Fresh yoke v0.8.0
       Fresh parking_lot_core v0.9.11
       Fresh typenum v1.18.0
       Fresh rand_core v0.6.4
       Fresh zerovec-derive v0.11.1
       Fresh futures-sink v0.3.31
       Fresh socket2 v0.5.10
       Fresh signal-hook-registry v1.4.5
       Fresh zerovec v0.11.2
       Fresh generic-array v0.14.7
       Fresh parking_lot v0.12.4
       Fresh mio v1.0.4
       Fresh displaydoc v0.2.5
       Fresh tokio-macros v2.5.0
       Fresh itoa v1.0.15
       Fresh futures-channel v0.3.31
       Fresh slab v0.4.9
       Fresh tokio v1.45.1
       Fresh futures-macro v0.3.31
       Fresh futures-io v0.3.31
       Fresh futures-task v0.3.31
       Fresh pin-utils v0.1.0
       Fresh bitflags v2.9.1
       Fresh tinystr v0.8.1
       Fresh crypto-common v0.1.6
       Fresh futures-util v0.3.31
       Fresh litemap v0.8.0
       Fresh writeable v0.6.1
       Fresh potential_utf v0.1.2
       Fresh http v1.3.1
       Fresh zerotrie v0.2.2
       Fresh icu_locale_core v2.0.0
       Fresh serde_derive v1.0.219
       Fresh http-body v1.0.1
       Fresh icu_collections v2.0.0
       Fresh serde v1.0.219
       Fresh icu_provider v2.0.0
       Fresh zerocopy v0.8.25
       Fresh percent-encoding v2.3.1
       Fresh subtle v2.6.1
       Fresh log v0.4.27
       Fresh foreign-types-shared v0.1.1
       Fresh zeroize v1.8.1
       Fresh icu_normalizer_data v2.0.0
       Fresh icu_properties_data v2.0.1
       Fresh openssl-sys v0.9.109
       Fresh openssl-macros v0.1.1
       Fresh ident_case v1.0.1
       Fresh foreign-types v0.3.2
       Fresh strsim v0.11.1
       Fresh try-lock v0.2.5
       Fresh tower-service v0.3.3
       Fresh icu_properties v2.0.1
       Fresh icu_normalizer v2.0.0
       Fresh httparse v1.10.1
       Fresh tracing-core v0.1.34
       Fresh openssl v0.10.73
       Fresh darling_core v0.20.11
       Fresh want v0.3.1
       Fresh ryu v1.0.20
       Fresh openssl-probe v0.1.6
       Fresh unicase v2.8.1
       Fresh hyper v1.6.0
       Fresh darling_macro v0.20.11
       Fresh native-tls v0.2.14
       Fresh idna_adapter v1.2.1
       Fresh tracing v0.1.41
       Fresh form_urlencoded v1.2.1
       Fresh sync_wrapper v1.0.2
       Fresh ipnet v2.11.0
       Fresh utf8_iter v1.0.4
       Fresh cpufeatures v0.2.17
       Fresh tower-layer v0.3.3
       Fresh base64 v0.22.1
       Fresh tower v0.5.2
       Fresh idna v1.0.3
       Fresh tokio-native-tls v0.3.1
       Fresh hyper-util v0.1.14
       Fresh serde_json v1.0.140
       Fresh darling v0.20.11
       Fresh getrandom v0.3.3
       Fresh http-body-util v0.1.3
       Fresh futures-executor v0.3.31
       Fresh inout v0.1.4
       Fresh block-buffer v0.10.4
       Fresh aho-corasick v1.1.3
       Fresh thiserror-impl v2.0.12
       Fresh unicode-xid v0.2.6
       Fresh mime v0.3.17
       Fresh regex-syntax v0.8.5
       Fresh iri-string v0.7.8
       Fresh futures v0.3.31
       Fresh derive_more-impl v1.0.0
       Fresh digest v0.10.7
       Fresh thiserror v2.0.12
       Fresh regex-automata v0.4.9
       Fresh mime_guess v2.0.5
       Fresh tower-http v0.6.6
       Fresh hyper-tls v0.6.0
       Fresh cipher v0.4.4
       Fresh serde_with_macros v3.12.0
       Fresh psm v0.1.26
       Fresh num-traits v0.2.19
       Fresh erasable v1.3.0
       Fresh url v2.5.4
       Fresh ahash v0.8.12
       Fresh serde_urlencoded v0.7.1
       Fresh rustls-pki-types v1.12.0
       Fresh universal-hash v0.5.1
       Fresh ppv-lite86 v0.2.21
       Fresh tokio-util v0.7.15
       Fresh pin-project-internal v1.1.10
       Fresh include_dir_macros v0.7.4
       Fresh proc-macro-error-attr2 v2.0.0
       Fresh base64ct v1.8.0
       Fresh bytemuck v1.23.1
       Fresh opaque-debug v0.3.1
       Fresh password-hash v0.5.0
       Fresh include_dir v0.7.4
       Fresh rand_chacha v0.3.1
       Fresh rgb v0.8.50
       Fresh itertools v0.10.5
       Fresh pin-project v1.1.10
       Fresh reqwest v0.12.19
       Fresh poly1305 v0.8.0
       Fresh proc-macro-error2 v2.0.1
       Fresh serde_with v3.12.0
       Fresh rc-box v1.3.0
       Fresh chrono v0.4.41
       Fresh hashbrown v0.14.5
       Fresh stacker v0.1.21
       Fresh regex v1.11.1
       Fresh derive_more v1.0.0
       Fresh blake2 v0.10.6
       Fresh chacha20 v0.9.1
       Fresh uuid v1.17.0
       Fresh aead v0.5.2
       Fresh is-terminal v0.4.16
       Fresh heck v0.5.0
       Fresh termcolor v1.4.1
       Fresh takecell v0.1.1
       Fresh humantime v2.2.0
       Fresh either v1.15.0
       Fresh take_mut v0.2.2
       Fresh chacha20poly1305 v0.10.1
       Fresh teloxide-macros v0.9.0
       Fresh argon2 v0.5.3
       Fresh aquamarine v0.6.0
       Fresh hashlink v0.9.1
       Fresh teloxide-core v0.11.2
       Fresh env_logger v0.10.2
       Fresh rand v0.8.5
       Fresh libsqlite3-sys v0.28.0
       Fresh dptree v0.3.0
       Fresh tokio-stream v0.1.17
       Fresh hex v0.4.3
       Fresh fallible-streaming-iterator v0.1.9
       Fresh linux-raw-sys v0.9.4
       Fresh fallible-iterator v0.3.0
       Fresh rustix v1.0.7
       Fresh nine_sdk v0.1.0 (/tmp/cargo-mutants-workspace-191TZv.tmp/9sdk)
warning: unused import: `AeadCore`
 --> 9sdk/src/lib.rs:7:18
  |
7 |     aead::{Aead, AeadCore},
  |                  ^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `CryptoRng` and `Rng`
 --> 9sdk/src/lib.rs:9:12
  |
9 | use rand::{CryptoRng, Rng, RngCore, thread_rng};
  |            ^^^^^^^^^  ^^^

warning: function `encrypt_chacha20` is never used
   --> 9sdk/src/lib.rs:160:4
    |
160 | fn encrypt_chacha20(
    |    ^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: function `decrypt_chacha20` is never used
   --> 9sdk/src/lib.rs:175:4
    |
175 | fn decrypt_chacha20(
    |    ^^^^^^^^^^^^^^^^

       Fresh pretty_env_logger v0.5.0
       Fresh teloxide v0.15.0
       Fresh fastrand v2.3.0
warning: `nine_sdk` (lib) generated 4 warnings (run `cargo fix --lib -p nine_sdk` to apply 2 suggestions)
       Fresh rusqlite v0.31.0
       Fresh tempfile v3.20.0
warning: unused import: `Write`
 --> meow/tests/roundtrip.rs:2:21
  |
2 | use std::io::{Read, Write};
  |                     ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `Read`
 --> meow/tests/roundtrip.rs:2:15
  |
2 | use std::io::{Read, Write};
  |               ^^^^

warning: unused import: `std::collections::HashMap`
  --> meow/src/v1/handlers/message.rs:20:9
   |
20 |     use std::collections::HashMap;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `ChatId`, `ChatKind`, `Chat`, `MessageId`, `MessageKind`, `UserId`, and `User`
  --> meow/src/v1/handlers/message.rs:21:27
   |
21 |     use teloxide::types::{Chat, ChatId, ChatKind, MessageId, MessageKind, User, UserId};
   |                           ^^^^  ^^^^^^  ^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^^^  ^^^^  ^^^^^^

warning: unused import: `CommandLoggedOut`
 --> meow/src/v1/models/buttons.rs:2:44
  |
2 | use crate::v1::commands::{CommandLoggedIn, CommandLoggedOut};
  |                                            ^^^^^^^^^^^^^^^^

warning: unused import: `PASSWORD_HANDLERS`
 --> meow/src/v1/models/buttons.rs:4:25
  |
4 | use crate::v1::models::{PASSWORD_HANDLERS, log_in_state, password_handler::PasswordHandler};
  |                         ^^^^^^^^^^^^^^^^^

warning: unused import: `std::error::Error`
 --> meow/src/v1/models/buttons.rs:7:5
  |
7 | use std::error::Error;
  |     ^^^^^^^^^^^^^^^^^

warning: unused import: `hex`
 --> meow/src/v1/models/password_handler.rs:2:5
  |
2 | use hex;
  |     ^^^

warning: unused import: `CHAT_MESSAGE_IDS`
 --> meow/src/v1/processors/callback_processor.rs:3:48
  |
3 | use crate::v1::processors::message_processor::{CHAT_MESSAGE_IDS, delete_all_messages};
  |                                                ^^^^^^^^^^^^^^^^

warning: unused imports: `BotCommandScope` and `Message`
 --> meow/src/v1/processors/callback_processor.rs:8:23
  |
8 | use teloxide::types::{BotCommandScope, MaybeInaccessibleMessage, Message};
  |                       ^^^^^^^^^^^^^^^                            ^^^^^^^

warning: unused import: `Result as SqlResult`
 --> meow/src/v1/services/user_config_store.rs:1:47
  |
1 | use rusqlite::{Connection, OptionalExtension, Result as SqlResult, params};
  |                                               ^^^^^^^^^^^^^^^^^^^

warning: unused import: `connect`
 --> meow/src/main.rs:8:27
  |
8 | use nine_sdk::{Transport, connect};
  |                           ^^^^^^^

warning: unused import: `CommandLoggedIn`
 --> meow/src/main.rs:9:20
  |
9 | use v1::commands::{CommandLoggedIn, CommandLoggedOut};
  |                    ^^^^^^^^^^^^^^^

warning: unused import: `message_handler`
  --> meow/src/main.rs:10:38
   |
10 | use v1::handlers::{callback_handler, message_handler};
   |                                      ^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
  --> meow/src/v1/models/password_handler.rs:42:13
   |
42 |         let mut key_manager = self.key_manager.lock().await;
   |             ----^^^^^^^^^^^
   |             |
   |             help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
  --> meow/src/v1/models/password_handler.rs:61:13
   |
61 |         let mut key_manager = self.key_manager.lock().await;
   |             ----^^^^^^^^^^^
   |             |
   |             help: remove this `mut`

warning: unused variable: `key_manager`
  --> meow/src/v1/models/password_handler.rs:80:13
   |
80 |         let key_manager = self.key_manager.lock().await;
   |             ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_key_manager`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `key_manager`
  --> meow/src/v1/models/password_handler.rs:89:13
   |
89 |         let key_manager = self.key_manager.lock().await;
   |             ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_key_manager`

warning: unused variable: `user_id`
  --> meow/src/v1/services/user_config_store.rs:61:36
   |
61 |     pub async fn get_config(&self, user_id: &str) -> Result<String, UserConfigStoreError> {
   |                                    ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_user_id`

warning: unused variable: `transport`
  --> meow/src/main.rs:57:9
   |
57 |     let transport = determine_transport();
   |         ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_transport`

warning: unreachable pattern
   --> meow/src/main.rs:143:13
    |
140 |             Transport::Tcp(addr) => {
    |             -------------------- matches all the relevant values
...
143 |             _ => panic!("Expected TCP transport"),
    |             ^ no value can reach this
    |
    = note: `#[warn(unreachable_patterns)]` on by default

warning: unreachable pattern
   --> meow/src/main.rs:160:13
    |
157 |             Transport::Tcp(addr) => {
    |             -------------------- matches all the relevant values
...
160 |             _ => panic!("Expected TCP transport"),
    |             ^ no value can reach this

warning: unreachable pattern
   --> meow/src/main.rs:171:13
    |
168 |             Transport::Tcp(addr) => {
    |             -------------------- matches all the relevant values
...
171 |             _ => panic!("Expected TCP transport"),
    |             ^ no value can reach this

warning: unreachable pattern
   --> meow/src/main.rs:187:13
    |
184 |             Transport::Tcp(addr) => {
    |             -------------------- matches all the relevant values
...
187 |             _ => panic!("Expected TCP transport"),
    |             ^ no value can reach this

warning: unreachable pattern
   --> meow/src/main.rs:197:13
    |
194 |             Transport::Tcp(addr) => {
    |             -------------------- matches all the relevant values
...
197 |             _ => panic!("Expected TCP transport"),
    |             ^ no value can reach this

warning: struct `MockBot` is never constructed
  --> meow/src/v1/handlers/message.rs:47:12
   |
47 |     struct MockBot;
   |            ^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: struct `MockMessage` is never constructed
  --> meow/src/v1/handlers/message.rs:48:12
   |
48 |     struct MockMessage;
   |            ^^^^^^^^^^^

warning: struct `MockUserConfigStore` is never constructed
  --> meow/src/v1/handlers/message.rs:49:12
   |
49 |     struct MockUserConfigStore;
   |            ^^^^^^^^^^^^^^^^^^^

warning: variant `InvalidState` is never constructed
  --> meow/src/v1/models/password_handler.rs:14:5
   |
10 | pub enum PasswordError {
   |          ------------- variant in this enum
...
14 |     InvalidState,
   |     ^^^^^^^^^^^^
   |
   = note: `PasswordError` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

       Fresh meow v0.1.0 (/tmp/cargo-mutants-workspace-191TZv.tmp/meow)
warning: unused import: `CommandLoggedOut`
 --> meow/src/v1/models/buttons.rs:2:44
  |
2 | use crate::v1::commands::{CommandLoggedIn, CommandLoggedOut};
  |                                            ^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: function `log_callback_result` is never used
  --> meow/src/v1/handlers/callback.rs:39:4
   |
39 | fn log_callback_result<T, E: std::fmt::Display>(result: &Result<T, E>) {
   |    ^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `TABLE_NAME` is never used
 --> meow/src/v1/services/user_config_store.rs:8:7
  |
8 | const TABLE_NAME: &str = "user_configs";
  |       ^^^^^^^^^^

warning: constant `SELECT_CONFIG_SQL` is never used
  --> meow/src/v1/services/user_config_store.rs:15:7
   |
15 | const SELECT_CONFIG_SQL: &str = "SELECT config_json FROM user_configs WHERE user_id = ?1";
   |       ^^^^^^^^^^^^^^^^^

warning: variant `NotFound` is never constructed
  --> meow/src/v1/services/user_config_store.rs:24:5
   |
18 | pub enum UserConfigStoreError {
   |          -------------------- variant in this enum
...
24 |     NotFound,
   |     ^^^^^^^^
   |
   = note: `UserConfigStoreError` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: method `config_exists` is never used
  --> meow/src/v1/services/user_config_store.rs:66:18
   |
38 | impl UserConfigStore {
   | -------------------- method in this implementation
...
66 |     pub async fn config_exists(&self, user_id: &str) -> Result<bool, UserConfigStoreError> {
   |                  ^^^^^^^^^^^^^

warning: function `query_user_config` is never used
  --> meow/src/v1/services/user_config_store.rs:95:4
   |
95 | fn query_user_config(
   |    ^^^^^^^^^^^^^^^^^

warning: `meow` (test "roundtrip") generated 2 warnings
warning: `meow` (bin "meow" test) generated 27 warnings (run `cargo fix --bin "meow" --tests` to apply 14 suggestions)
warning: `meow` (bin "meow") generated 23 warnings (16 duplicates) (run `cargo fix --bin "meow"` to apply 1 suggestion)
    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.09s
     Running `/tmp/cargo-mutants-workspace-191TZv.tmp/target/debug/deps/meow-9c48ee44fefabeb0`

running 43 tests
test tests::test_create_enclave_transport ... ok
test tests::test_create_default_transport ... ok
test tests::test_constants ... ok
test keyboard::tests::test_logged_in_operations_structure ... ok
test keyboard::tests::test_logged_in_operations_not_default ... ok
test keyboard::tests::test_logged_out_operations_structure ... ok
test tests::test_create_config_store ... ok
test keyboard::tests::test_logged_out_operations_not_default ... ok
test tests::test_create_tcp_transport ... ok
test tests::test_main_function_exists ... ok
test tests::test_determine_transport ... ok
test tests::test_is_enclave_mode ... ok
test v1::handlers::callback::tests::test_callback_handler_signature ... ok
test tests::test_create_tcp_transport_invalid_address - should panic ... ok
test v1::handlers::callback::tests::test_callback_query_creation ... ok
test v1::handlers::callback::tests::test_error_types ... ok
test v1::handlers::callback::tests::test_log_callback_result_success ... ok
test v1::handlers::message::tests::test_error_types ... ok
test v1::handlers::callback::tests::test_log_callback_result_error ... ok
test v1::handlers::message::tests::test_message_handler_signature ... ok
test v1::handlers::callback::tests::test_log_callback_result_custom_error ... ok
test v1::models::buttons::test_button_partial_eq ... ok
test v1::models::buttons::test_parse_logged_in_button_all_arms_required ... ok
test v1::models::buttons::test_parse_logged_out_button_all_arms_required ... ok
test v1::processors::message_processor::tests::test_public_functions_exist ... ok
test v1::services::user_config_store::tests::test_database_constants ... ok
test v1::services::user_config_store::tests::test_get_config_not_found ... FAILED
test v1::services::user_config_store::tests::test_error_propagation ... ok
test v1::services::user_config_store::tests::test_config_exists ... FAILED
test v1::services::user_config_store::tests::test_new_store_with_invalid_path ... ok
test v1::services::user_config_store::tests::test_helper_functions ... ok
test v1::services::user_config_store::tests::test_insert_and_get_config ... FAILED
test v1::services::user_config_store::tests::test_empty_config_json ... FAILED
test v1::services::user_config_store::tests::test_user_config_store_error_display ... ok
test v1::services::user_config_store::tests::test_user_config_struct ... ok
test v1::services::user_config_store::tests::test_large_config_json ... FAILED
test v1::services::user_config_store::tests::test_new_store_creates_database ... ok
test v1::services::user_config_store::tests::test_special_characters_in_user_id ... FAILED
test v1::services::user_config_store::tests::test_multiple_users ... FAILED
test v1::services::user_config_store::tests::test_sql_injection_safety ... FAILED
test v1::services::user_config_store::tests::test_very_long_user_id ... FAILED
test v1::services::user_config_store::tests::test_update_existing_config ... FAILED
test v1::services::user_config_store::tests::test_concurrent_access ... FAILED

failures:

---- v1::services::user_config_store::tests::test_get_config_not_found stdout ----

thread 'v1::services::user_config_store::tests::test_get_config_not_found' panicked at meow/src/v1/services/user_config_store.rs:217:9:
assertion failed: matches!(result, Err(UserConfigStoreError::NotFound))

---- v1::services::user_config_store::tests::test_config_exists stdout ----

thread 'v1::services::user_config_store::tests::test_config_exists' panicked at meow/src/v1/services/user_config_store.rs:256:9:
assertion `left == right` failed
  left: true
 right: false

---- v1::services::user_config_store::tests::test_insert_and_get_config stdout ----

thread 'v1::services::user_config_store::tests::test_insert_and_get_config' panicked at meow/src/v1/services/user_config_store.rs:208:9:
assertion `left == right` failed
  left: "xyzzy"
 right: "{\"password_hash\":\"test_hash\",\"primary_key_salt\":\"test_salt1\",\"secondary_key_salt\":\"test_salt2\"}"

---- v1::services::user_config_store::tests::test_empty_config_json stdout ----

thread 'v1::services::user_config_store::tests::test_empty_config_json' panicked at meow/src/v1/services/user_config_store.rs:274:9:
assertion `left == right` failed
  left: "xyzzy"
 right: "{}"

---- v1::services::user_config_store::tests::test_large_config_json stdout ----

thread 'v1::services::user_config_store::tests::test_large_config_json' panicked at meow/src/v1/services/user_config_store.rs:344:9:
assertion `left == right` failed
  left: "xyzzy"
 right: "{\"data\":\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\"numbers\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999]}"

---- v1::services::user_config_store::tests::test_special_characters_in_user_id stdout ----

thread 'v1::services::user_config_store::tests::test_special_characters_in_user_id' panicked at meow/src/v1/services/user_config_store.rs:286:9:
assertion `left == right` failed
  left: "xyzzy"
 right: "{\"password_hash\":\"test_hash\",\"primary_key_salt\":\"test_salt1\",\"secondary_key_salt\":\"test_salt2\"}"

---- v1::services::user_config_store::tests::test_multiple_users stdout ----

thread 'v1::services::user_config_store::tests::test_multiple_users' panicked at meow/src/v1/services/user_config_store.rs:247:9:
assertion `left == right` failed
  left: "xyzzy"
 right: "{\"password_hash\":\"test_hash\",\"primary_key_salt\":\"test_salt1\",\"secondary_key_salt\":\"test_salt2\"}"

---- v1::services::user_config_store::tests::test_sql_injection_safety stdout ----

thread 'v1::services::user_config_store::tests::test_sql_injection_safety' panicked at meow/src/v1/services/user_config_store.rs:396:9:
assertion `left == right` failed
  left: "xyzzy"
 right: "{\"password_hash\":\"test_hash\",\"primary_key_salt\":\"test_salt1\",\"secondary_key_salt\":\"test_salt2\"}"

---- v1::services::user_config_store::tests::test_very_long_user_id stdout ----

thread 'v1::services::user_config_store::tests::test_very_long_user_id' panicked at meow/src/v1/services/user_config_store.rs:298:9:
assertion `left == right` failed
  left: "xyzzy"
 right: "{\"password_hash\":\"test_hash\",\"primary_key_salt\":\"test_salt1\",\"secondary_key_salt\":\"test_salt2\"}"

---- v1::services::user_config_store::tests::test_update_existing_config stdout ----

thread 'v1::services::user_config_store::tests::test_update_existing_config' panicked at meow/src/v1/services/user_config_store.rs:232:9:
assertion `left == right` failed
  left: "xyzzy"
 right: "{\"password_hash\":\"updated_hash\",\"primary_key_salt\":\"updated_salt1\",\"secondary_key_salt\":\"updated_salt2\"}"

---- v1::services::user_config_store::tests::test_concurrent_access stdout ----

thread 'v1::services::user_config_store::tests::test_concurrent_access' panicked at meow/src/v1/services/user_config_store.rs:317:17:
assertion `left == right` failed
  left: "xyzzy"
 right: "{\"id\":0}"

thread 'v1::services::user_config_store::tests::test_concurrent_access' panicked at meow/src/v1/services/user_config_store.rs:317:17:
assertion `left == right` failed
  left: "xyzzy"
 right: "{\"id\":1}"

thread 'v1::services::user_config_store::tests::test_concurrent_access' panicked at meow/src/v1/services/user_config_store.rs:317:17:
assertion `left == right` failed
  left: "xyzzy"
 right: "{\"id\":2}"

thread 'v1::services::user_config_store::tests::test_concurrent_access' panicked at meow/src/v1/services/user_config_store.rs:317:17:
assertion `left == right` failed
  left: "xyzzy"
 right: "{\"id\":3}"

thread 'v1::services::user_config_store::tests::test_concurrent_access' panicked at meow/src/v1/services/user_config_store.rs:317:17:
assertion `left == right` failed
  left: "xyzzy"
 right: "{\"id\":4}"

thread 'v1::services::user_config_store::tests::test_concurrent_access' panicked at meow/src/v1/services/user_config_store.rs:325:26:
called `Result::unwrap()` on an `Err` value: JoinError::Panic(Id(1), "assertion `left == right` failed\n  left: \"xyzzy\"\n right: \"{\\\"id\\\":0}\"", ...)


failures:
    v1::services::user_config_store::tests::test_concurrent_access
    v1::services::user_config_store::tests::test_config_exists
    v1::services::user_config_store::tests::test_empty_config_json
    v1::services::user_config_store::tests::test_get_config_not_found
    v1::services::user_config_store::tests::test_insert_and_get_config
    v1::services::user_config_store::tests::test_large_config_json
    v1::services::user_config_store::tests::test_multiple_users
    v1::services::user_config_store::tests::test_special_characters_in_user_id
    v1::services::user_config_store::tests::test_sql_injection_safety
    v1::services::user_config_store::tests::test_update_existing_config
    v1::services::user_config_store::tests::test_very_long_user_id

test result: FAILED. 32 passed; 11 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.06s

error: test failed, to rerun pass `-p meow --bin meow`

*** result: Failure(101)
