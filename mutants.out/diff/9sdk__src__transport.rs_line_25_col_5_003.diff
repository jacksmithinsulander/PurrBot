--- 9sdk/src/transport.rs
+++ replace connect -> io::Result<Pin<Box<dyn TransportStream>>> with Ok(Pin::from(Box::new(Default::default())))
@@ -17,27 +17,17 @@
 pub trait TransportStream: AsyncRead + AsyncWrite + Send {}
 
 impl TransportStream for TcpStream {}
 
 #[cfg(feature = "vsock")]
 impl TransportStream for VsockStream {}
 
 pub async fn connect(transport: Transport) -> io::Result<Pin<Box<dyn TransportStream>>> {
-    match transport {
-        Transport::Tcp(addr) => {
-            let stream = TcpStream::connect(addr).await?;
-            Ok(Box::pin(stream))
-        }
-        #[cfg(feature = "vsock")]
-        Transport::Vsock(cid, port) => {
-            let stream = VsockStream::connect(cid, port).await?;
-            Ok(Box::pin(stream))
-        }
-    }
+    Ok(Pin::from(Box::new(Default::default()))) /* ~ changed by cargo-mutants ~ */
 }
 
 pub async fn listen(transport: Transport) -> io::Result<Pin<Box<dyn TransportStream>>> {
     match transport {
         Transport::Tcp(addr) => {
             let listener = TcpListener::bind(addr).await?;
             let (stream, _) = listener.accept().await?;
             Ok(Box::pin(stream))
